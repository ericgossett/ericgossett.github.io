{"version":3,"sources":["webpack:///./src/templates/projectPage.js","webpack:///./src/components/Header/index.js","webpack:///./src/components/Footer/index.js","webpack:///./src/components/Layout/index.js","webpack:///./src/components/Headline/index.js"],"names":["breakPoints","Container","styled","div","withConfig","displayName","componentId","props","height","ProjectPostTemplate","render","post","this","data","markdownRemark","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_Layout__WEBPACK_IMPORTED_MODULE_5__","style","marginTop","_components_Headline__WEBPACK_IMPORTED_MODULE_4__","text","frontmatter","title","color","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","className","dangerouslySetInnerHTML","__html","html","React","Component","pageQuery","Hero","Headline","Link","SubHeader","Header","react_default","to","FooterContainer","FooterText","year","Date","getFullYear","Footer","Layout","_ref","children","gatsby_browser_entry","query","Fragment","components_Header","components_Footer","_755544856","propTypes","PropTypes","node","isRequired","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","styled_components__WEBPACK_IMPORTED_MODULE_2__","H1","backgroundColor","boxShadowColor","string","defaultProps"],"mappings":"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","file":"component---src-templates-project-page-js-edfd677e94a19d0fe7af.js","sourcesContent":["import React from 'react';\nimport Helmet from 'react-helmet';\nimport { graphql } from 'gatsby';\nimport styled from 'styled-components';\nimport Headline from '../components/Headline';\nimport Layout from '../components/Layout';\n\nimport 'prism-themes/themes/prism-atom-dark.css';\n\n\n\nconst breakPoints = {\n  sm: 320,\n  md: 800,\n  lg: 1200,\n};\n\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  margin: 0 auto;\n  font-family: 'Karla', sans-serif;\n  height: ${props => props.height || '100%'};\n  @media screen and (min-width: ${breakPoints.sm}px) {\n    width: 100%;\n  }\n  @media screen and (min-width: ${breakPoints.md}px) {\n    max-width: 788px;\n  }\n  @media screen and (min-width: ${breakPoints.lg}px) {\n    max-width: 1088px;\n  }\n`;\nContainer.displayName = 'Container';\n\n\n/* eslint-disable react/no-danger */\nclass ProjectPostTemplate extends React.Component {\n  render() {\n    const post = this.props.data.markdownRemark; // data.markdownRemark holds our post data\n    return (\n      <Layout>\n        <div style={{ marginTop: '-145px' }}>\n          <Headline text={post.frontmatter.title} color=\"#57C7FF\" />\n          <div\n            style={{\n              marginTop: '30px',\n            }}\n          >\n            <Container>\n              <Helmet title={`Eric Gossett - ${post.frontmatter.title}`} />\n              <div className=\"blog-post\">\n                <div\n                  className=\"blog-post-content\"\n                  dangerouslySetInnerHTML={{ __html: post.html }}\n                />\n              </div>\n            </Container>\n          </div>\n        </div>\n      </Layout>\n    );\n  }\n}\n\n\nexport default ProjectPostTemplate;\n\nexport const pageQuery = graphql`\n  query BlogPostByPath($path: String!) {\n    markdownRemark(frontmatter: { path: { eq: $path } }) {\n      html\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        path\n        title\n        image {\n          childImageSharp{\n              sizes(maxWidth: 630) {\n                  ...GatsbyImageSharpSizes\n              }\n          }\n        }\n      }\n    }\n  }\n`;\n","import React from 'react';\nimport styled from 'styled-components';\nimport Link from 'gatsby-link';\n\nconst breakPoints = {\n  sm: 320,\n  md: 800,\n  lg: 1200,\n};\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  margin: 0 auto;\n  height: ${props => props.height || '100%'};\n  @media screen and (min-width: ${breakPoints.sm}px) {\n    width: 100%;\n  }\n  @media screen and (min-width: ${breakPoints.md}px) {\n    max-width: 788px;\n  }\n  @media screen and (min-width: ${breakPoints.lg}px) {\n    max-width: 1088px;\n  }\n`;\nContainer.displayName = 'Container';\n\n\nconst Hero = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  /*justify-content: center; */\n  min-height: 280px;\n  padding-top: 40px;\n  /*\n  @media screen and (min-width: ${breakPoints.sm}px) {\n    min-height: 220px;\n    padding-top: 20px;\n  }\n  @media screen and (min-width: ${breakPoints.md}px) {\n    min-height: 280px;\n    padding-top: 40px;\n  }\n  */\n  @media screen and (min-width: ${breakPoints.lg}px) {\n    min-height: 340px;\n    padding-top: 60px;\n  }\n`;\n\n\nconst Headline = styled(Link)`\n  text-decoration: none;\n  font-size: 1.5rem;\n  font-family: 'Press Start 2P', monospace;\n  color: #f9cd9d;\n  margin-top: 5px;\n  font-weight: bold;\n  padding: 15px 20px;\n  border: 3px solid #f9cd9d;\n  transform: skewY(-1deg);\n  /*\n  @media screen and (min-width: ${breakPoints.sm}px) {\n    font-size: 1.5rem;\n  }\n  */\n  @media screen and (min-width: ${breakPoints.md}px) {\n    font-size: 2.0rem;\n  }\n  @media screen and (min-width: ${breakPoints.lg}px) {\n    font-size: 2.5rem;\n    padding: 20px 30px;\n  }\n`;\n\n// Tilted headline\n/*\nconst Headline = styled.div`\n  position: relative;\n  display: inline-block;\n  z-index: 1;\n  clear: both;\n  font-size: 1.5rem;\n  color: #5F6B9D;\n  margin-top: 25px;\n  font-family: 'Rubik', sans-serif;\n  font-weight: bold;\n  &:after {\n    content: \"\";\n    position: absolute;\n    top: -20%;\n    left: -10%;\n    width: 120%;\n    height: 140%;\n    background: #DBEAFF;\n    border: 1px solid #1A1819;\n    -webkit-transform: rotate(-2deg);\n    transform: rotate(-2deg);\n    z-index: -1;\n  }\n  @media screen and (min-width: ${breakPoints.sm}px) {\n    font-size: 1.5rem;\n  }\n  @media screen and (min-width: ${breakPoints.md}px) {\n    font-size: 2.0rem;\n    &:after {\n    content: \"\";\n    position: absolute;\n    top: -40%;\n    left: -10%;\n    width: 120%;\n    height: 170%;\n    background: #DBEAFF;\n    -webkit-transform: rotate(-2deg);\n    transform: rotate(-2deg);\n    z-index: -1;\n  }\n  }\n  @media screen and (min-width: ${breakPoints.lg}px) {\n    font-size: 2.5rem;\n    &:after {\n    content: \"\";\n    position: absolute;\n    top: -60%;\n    left: -15%;\n    width: 130%;\n    height: 230%;\n    background: #DBEAFF;\n    -webkit-transform: rotate(-2deg);\n    transform: rotate(-2deg);\n    z-index: -1;\n  }\n  }\n`;\n*/\n\nconst SubHeader = styled.div`\n  margin-top: 5px;\n  color: #FF6AC1;\n  padding: 0px 8px;\n  border: 1px solid #FF6AC1;\n  font-size: 1.0rem;\n  /*transform: skewY(1deg);*/\n  margin-top: 20px;\n  /*\n  @media screen and (min-width: ${breakPoints.sm}px) {\n\n  }\n  @media screen and (min-width: ${breakPoints.md}px) {\n\n  }\n  */\n  @media screen and (min-width: ${breakPoints.lg}px) {\n    font-size: 1.24rem;\n    margin-top: 20px;\n  }\n`;\n\nconst Header = () => (\n  <Hero>\n    <Headline to=\"/\"> Eric Gossett </Headline>\n    <SubHeader> scientist | developer </SubHeader>\n  </Hero>\n);\n\nexport default Header;\n","import React from 'react';\nimport styled from 'styled-components';\n\n\nconst FooterContainer = styled.div`\n  margin: 30px;\n  text-align:center;\n  display:flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 0.8rem;\n`;\n\nconst FooterText = styled.div`\n  color: #f9cd9d;\n  padding: 4px 8px;\n  border: 1px solid #f9cd9d;\n  font-size: 0.8rem;\n`;\n\nconst year = new Date().getFullYear();\n\nconst Footer = () => (\n  <FooterContainer>\n    <FooterText>  ©{ year } </FooterText>\n  </FooterContainer>\n);\n\n\nexport default Footer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Header from '../Header';\nimport Footer from '../Footer';\nimport { StaticQuery, graphql } from 'gatsby';\n\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (  \n    <>\n      <Header />\n        <main>\n          {children}\n        </main>\n      <Footer />\n    </>\n  )}\n  />\n);\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Layout;\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst breakPoints = {\n  sm: 320,\n  md: 800,\n  lg: 1200,\n};\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  margin: 0 auto;\n  height: ${props => props.height || '100%'};\n  padding: 0px 25px;\n  @media screen and (min-width: ${breakPoints.sm}px) {\n    width: 100%;\n  }\n  @media screen and (min-width: ${breakPoints.md}px) {\n    max-width: 788px;\n    padding: 0px 0px;\n\n  }\n  @media screen and (min-width: ${breakPoints.lg}px) {\n    max-width: 1088px;\n    padding: 0px 0px;\n  }\n`;\nContainer.displayName = 'Container';\n\nconst H1 = styled.div`\n  font-size: 1.8rem;\n  position: relative;\n  display: inline-block;\n  font-family: 'Press Start 2P', monospace;\n  line-height: 1.5;\n  z-index: 1;\n  clear: both;\n  margin-top:60px;\n  color:   ${props => props.color};\n  transform: skewY(-1deg);\n  /*\n  &:after {\n    content: \"\";\n    position: absolute;\n    top: -30%;\n    left: -15%;\n    width: 130%;\n    height: 170%;\n    background: ${props => props.backgroundColor};\n    box-shadow: -5px 5px ${props => props.boxShadowColor};\n    -webkit-transform: rotate(-2deg);\n    transform: rotate(-2deg);\n    z-index: -1;\n  }\n  */\n  /*\n  @media screen and (min-width: ${breakPoints.sm}px) {\n    font-size: 2.0rem;\n  }\n  @media screen and (min-width: ${breakPoints.md}px) {\n    font-size: 2.5rem;\n    &:after {\n    content: \"\";\n    position: absolute;\n    top: -15%;\n    left: -10%;\n    width: 120%;\n    height: 160%;\n    background: #DBEAFF;\n    box-shadow: -5px 7px #C5CFE9;\n    -webkit-transform: rotate(-2deg);\n    transform: rotate(-2deg);\n    z-index: -1;\n  }\n  }\n  @media screen and (min-width: ${breakPoints.lg}px) {\n    font-size: 3.0rem;\n    &:after {\n    content: \"\";\n    position: absolute;\n    top: -50%;\n    left: -10%;\n    width: 120%;\n    height: 200%;\n    background: #DBEAFF;\n    box-shadow: -5px 7px #C5CFE9;\n    -webkit-transform: rotate(-2deg);\n    transform: rotate(-2deg);\n    z-index: -1;\n  }\n  }\n  */\n`;\n\nfunction Headline(props) {\n  return (\n    <Container>\n      <span>\n        {' '}\n        <H1\n          backgroundColor={props.backgroundColor}\n          color={props.color}\n          boxShadowColor={props.boxShadowColor}\n        >\n          {' '}\n          {props.text}{' '}\n        </H1>{' '}\n      </span>\n    </Container>\n  );\n}\n\nHeadline.propTypes = {\n  text: PropTypes.string.isRequired,\n  backgroundColor: PropTypes.string,\n  color: PropTypes.string,\n  boxShadowColor: PropTypes.string,\n};\n\nHeadline.defaultProps = {\n  backgroundColor: '#DBEAFF',\n  color: '#5F6B9D',\n  boxShadowColor: '#C5CFE9',\n};\n\nexport default Headline;\n"],"sourceRoot":""}